{"ast":null,"code":"import { createElement, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport loadScript from 'load-script2';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar eventNames = ['onReady', 'onStateChange', 'onPlaybackQualityChange', 'onPlaybackRateChange', 'onError', 'onApiChange'];\n/* global window */\n\nfunction loadSdk() {\n  return new Promise(function (resolve, reject) {\n    if (typeof window.YT === 'object' && typeof window.YT.ready === 'function') {\n      // A YouTube SDK is already loaded, so reuse that\n      window.YT.ready(function () {\n        resolve(window.YT);\n      });\n      return;\n    }\n\n    loadScript('https://www.youtube.com/iframe_api', function (err) {\n      if (err) {\n        reject(err);\n      } else {\n        window.YT.ready(function () {\n          resolve(window.YT);\n        });\n      }\n    });\n  });\n}\n\nvar sdk = null;\n\nfunction getSdk() {\n  if (!sdk) {\n    sdk = loadSdk();\n  }\n\n  return sdk;\n}\n\nvar YouTube = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(YouTube, _React$Component);\n\n  function YouTube(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onPlayerReady = _this.onPlayerReady.bind(_assertThisInitialized(_this));\n    _this.onPlayerStateChange = _this.onPlayerStateChange.bind(_assertThisInitialized(_this));\n    _this.refContainer = _this.refContainer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = YouTube.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPlayer();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this; // eslint-disable-next-line react/destructuring-assignment\n\n\n    var changes = Object.keys(this.props).filter(function (name) {\n      return _this2.props[name] !== prevProps[name];\n    });\n    this.updateProps(changes);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.playerInstance) {\n      this.playerInstance.destroy();\n    }\n  };\n\n  _proto.onPlayerReady = function onPlayerReady(event) {\n    var _this$props = this.props,\n        volume = _this$props.volume,\n        muted = _this$props.muted,\n        suggestedQuality = _this$props.suggestedQuality,\n        playbackRate = _this$props.playbackRate;\n\n    if (typeof volume !== 'undefined') {\n      event.target.setVolume(volume * 100);\n    }\n\n    if (typeof muted !== 'undefined') {\n      if (muted) {\n        event.target.mute();\n      } else {\n        event.target.unMute();\n      }\n    }\n\n    if (typeof suggestedQuality !== 'undefined') {\n      event.target.setPlaybackQuality(suggestedQuality);\n    }\n\n    if (typeof playbackRate !== 'undefined') {\n      event.target.setPlaybackRate(playbackRate);\n    }\n\n    this.resolvePlayer(event.target);\n  };\n\n  _proto.onPlayerStateChange = function onPlayerStateChange(event) {\n    var _this$props2 = this.props,\n        onCued = _this$props2.onCued,\n        onBuffering = _this$props2.onBuffering,\n        onPause = _this$props2.onPause,\n        onPlaying = _this$props2.onPlaying,\n        onEnd = _this$props2.onEnd;\n    var State = YT.PlayerState; // eslint-disable-line no-undef\n\n    switch (event.data) {\n      case State.CUED:\n        onCued(event);\n        break;\n\n      case State.BUFFERING:\n        onBuffering(event);\n        break;\n\n      case State.PAUSED:\n        onPause(event);\n        break;\n\n      case State.PLAYING:\n        onPlaying(event);\n        break;\n\n      case State.ENDED:\n        onEnd(event);\n        break;\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getPlayerParameters = function getPlayerParameters() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      autoplay: this.props.autoplay,\n      cc_load_policy: this.props.showCaptions ? 1 : 0,\n      controls: this.props.controls ? 1 : 0,\n      disablekb: this.props.disableKeyboard ? 1 : 0,\n      fs: this.props.allowFullscreen ? 1 : 0,\n      hl: this.props.lang,\n      iv_load_policy: this.props.annotations ? 1 : 3,\n      start: this.props.startSeconds,\n      end: this.props.endSeconds,\n      modestbranding: this.props.modestBranding ? 1 : 0,\n      playsinline: this.props.playsInline ? 1 : 0,\n      rel: this.props.showRelatedVideos ? 1 : 0,\n      showinfo: this.props.showInfo ? 1 : 0\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getInitialOptions = function getInitialOptions() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      videoId: this.props.video,\n      width: this.props.width,\n      height: this.props.height,\n      playerVars: this.getPlayerParameters(),\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange\n      }\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.updateProps = function updateProps(propNames) {\n    var _this3 = this;\n\n    this.player.then(function (player) {\n      propNames.forEach(function (name) {\n        // eslint-disable-next-line react/destructuring-assignment\n        var value = _this3.props[name];\n\n        switch (name) {\n          case 'muted':\n            if (value) {\n              player.mute();\n            } else {\n              player.unMute();\n            }\n\n            break;\n\n          case 'suggestedQuality':\n            player.setPlaybackQuality(value);\n            break;\n\n          case 'volume':\n            player.setVolume(value * 100);\n            break;\n\n          case 'paused':\n            if (value && player.getPlayerState() !== 2) {\n              player.pauseVideo();\n            } else if (!value && player.getPlayerState() === 2) {\n              player.playVideo();\n            }\n\n            break;\n\n          case 'id':\n          case 'className':\n          case 'width':\n          case 'height':\n            player.getIframe()[name] = value; // eslint-disable-line no-param-reassign\n\n            break;\n\n          case 'video':\n            if (!value) {\n              player.stopVideo();\n            } else {\n              var _this3$props = _this3.props,\n                  startSeconds = _this3$props.startSeconds,\n                  endSeconds = _this3$props.endSeconds,\n                  autoplay = _this3$props.autoplay;\n              var opts = {\n                videoId: value,\n                startSeconds: startSeconds || 0,\n                endSeconds: endSeconds\n              };\n\n              if (autoplay) {\n                player.loadVideoById(opts);\n              } else {\n                player.cueVideoById(opts);\n              }\n            }\n\n            break;\n        }\n      });\n    });\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.createPlayer = function createPlayer() {\n    var _this4 = this;\n\n    var volume = this.props.volume;\n    this.player = getSdk().then(function (YT) {\n      return new Promise(function (resolve) {\n        _this4.resolvePlayer = resolve;\n        var player = new YT.Player(_this4.container, _this4.getInitialOptions()); // Store the instance directly so we can destroy it sync in\n        // `componentWillUnmount`.\n\n        _this4.playerInstance = player;\n        eventNames.forEach(function (name) {\n          player.addEventListener(name, function (event) {\n            // eslint-disable-next-line react/destructuring-assignment\n            var handler = _this4.props[name];\n\n            if (handler) {\n              handler(event);\n            }\n          });\n        });\n      });\n    });\n\n    if (typeof volume === 'number') {\n      this.updateProps(['volume']);\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.refContainer = function refContainer(container) {\n    this.container = container;\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        id = _this$props3.id,\n        className = _this$props3.className,\n        style = _this$props3.style;\n    return /*#__PURE__*/createElement(\"div\", {\n      id: id,\n      className: className,\n      style: style,\n      ref: this.refContainer\n    });\n  };\n\n  return YouTube;\n}(Component);\n\nif (process.env.NODE_ENV !== 'production') {\n  YouTube.propTypes = {\n    /**\n     * An 11-character string representing a YouTube video ID..\n     */\n    video: PropTypes.string,\n\n    /**\n     * DOM ID for the player element.\n     */\n    id: PropTypes.string,\n\n    /**\n     * CSS className for the player element.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Inline style for container element.\n     */\n    style: PropTypes.object,\n    // eslint-disable-line react/forbid-prop-types\n\n    /**\n     * Width of the player element.\n     */\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Height of the player element.\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Pause the video.\n     */\n    paused: PropTypes.bool,\n    // eslint-disable-line react/no-unused-prop-types\n    // Player parameters\n\n    /**\n     * Whether the video should start playing automatically.\n     *\n     * https://developers.google.com/youtube/player_parameters#autoplay\n     */\n    autoplay: PropTypes.bool,\n\n    /**\n     * Whether to show captions below the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#cc_load_policy\n     */\n    showCaptions: PropTypes.bool,\n\n    /**\n     * Whether to show video controls.\n     *\n     * https://developers.google.com/youtube/player_parameters#controls\n     */\n    controls: PropTypes.bool,\n\n    /**\n     * Ignore keyboard controls.\n     *\n     * https://developers.google.com/youtube/player_parameters#disablekb\n     */\n    disableKeyboard: PropTypes.bool,\n\n    /**\n     * Whether to display the fullscreen button.\n     *\n     * https://developers.google.com/youtube/player_parameters#fs\n     */\n    allowFullscreen: PropTypes.bool,\n\n    /**\n     * The player's interface language. The parameter value is an ISO 639-1\n     * two-letter language code or a fully specified locale.\n     *\n     * https://developers.google.com/youtube/player_parameters#hl\n     */\n    lang: PropTypes.string,\n\n    /**\n     * Whether to show annotations on top of the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#iv_load_policy\n     */\n    annotations: PropTypes.bool,\n\n    /**\n     * Time in seconds at which to start playing the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#start\n     */\n    startSeconds: PropTypes.number,\n\n    /**\n     * Time in seconds at which to stop playing the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#end\n     */\n    endSeconds: PropTypes.number,\n\n    /**\n     * Remove most YouTube logos from the player.\n     *\n     * https://developers.google.com/youtube/player_parameters#modestbranding\n     */\n    modestBranding: PropTypes.bool,\n\n    /**\n     * Whether to play the video inline on iOS, instead of fullscreen.\n     *\n     * https://developers.google.com/youtube/player_parameters#playsinline\n     */\n    playsInline: PropTypes.bool,\n\n    /**\n     * Whether to show related videos after the video is over.\n     *\n     * https://developers.google.com/youtube/player_parameters#rel\n     */\n    showRelatedVideos: PropTypes.bool,\n\n    /**\n     * Whether to show video information (uploader, title, etc) before the video\n     * starts.\n     *\n     * **This parameter has been deprecated and has no effect.**\n     *\n     * https://developers.google.com/youtube/player_parameters#showinfo\n     */\n    showInfo: PropTypes.bool,\n\n    /**\n     * The playback volume, **as a number between 0 and 1**.\n     */\n    volume: PropTypes.number,\n\n    /**\n     * Whether the video's sound should be muted.\n     */\n    muted: PropTypes.bool,\n\n    /**\n     * The suggested playback quality.\n     *\n     * https://developers.google.com/youtube/iframe_api_reference#Playback_quality\n     */\n    suggestedQuality: PropTypes.string,\n\n    /**\n     * Playback speed.\n     *\n     * https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n     */\n    playbackRate: PropTypes.number,\n    // Events\n\n    /* eslint-disable react/no-unused-prop-types */\n\n    /**\n     * Sent when the YouTube player API has loaded.\n     */\n    onReady: PropTypes.func,\n\n    /**\n     * Sent when the player triggers an error.\n     */\n    onError: PropTypes.func,\n\n    /**\n     * Sent when the video is cued and ready to play.\n     */\n    onCued: PropTypes.func,\n\n    /**\n     * Sent when the video is buffering.\n     */\n    onBuffering: PropTypes.func,\n\n    /**\n     * Sent when playback has been started or resumed.\n     */\n    onPlaying: PropTypes.func,\n\n    /**\n     * Sent when playback has been paused.\n     */\n    onPause: PropTypes.func,\n\n    /**\n     * Sent when playback has stopped.\n     */\n    onEnd: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onPlaybackRateChange: PropTypes.func,\n    onPlaybackQualityChange: PropTypes.func\n    /* eslint-enable react/no-unused-prop-types */\n\n  };\n}\n\nYouTube.defaultProps = {\n  autoplay: false,\n  showCaptions: false,\n  controls: true,\n  disableKeyboard: false,\n  allowFullscreen: true,\n  annotations: true,\n  modestBranding: false,\n  playsInline: false,\n  showRelatedVideos: true,\n  showInfo: true,\n  onCued: function onCued() {},\n  onBuffering: function onBuffering() {},\n  onPlaying: function onPlaying() {},\n  onPause: function onPause() {},\n  onEnd: function onEnd() {}\n};\nexport default YouTube;","map":{"version":3,"sources":["D:/IT_SHATLE/Course_react/23-02-2021/node_modules/@u-wave/react-youtube/dist/react-youtube.es.js"],"names":["createElement","Component","PropTypes","loadScript","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","_assertThisInitialized","self","ReferenceError","eventNames","loadSdk","Promise","resolve","reject","window","YT","ready","err","sdk","getSdk","YouTube","_React$Component","props","_this","call","onPlayerReady","bind","onPlayerStateChange","refContainer","_proto","componentDidMount","createPlayer","componentDidUpdate","prevProps","_this2","changes","keys","filter","name","updateProps","componentWillUnmount","playerInstance","destroy","event","_this$props","volume","muted","suggestedQuality","playbackRate","target","setVolume","mute","unMute","setPlaybackQuality","setPlaybackRate","resolvePlayer","_this$props2","onCued","onBuffering","onPause","onPlaying","onEnd","State","PlayerState","data","CUED","BUFFERING","PAUSED","PLAYING","ENDED","getPlayerParameters","autoplay","cc_load_policy","showCaptions","controls","disablekb","disableKeyboard","fs","allowFullscreen","hl","lang","iv_load_policy","annotations","start","startSeconds","end","endSeconds","modestbranding","modestBranding","playsinline","playsInline","rel","showRelatedVideos","showinfo","showInfo","getInitialOptions","videoId","video","width","height","playerVars","events","onReady","onStateChange","propNames","_this3","player","then","forEach","value","getPlayerState","pauseVideo","playVideo","getIframe","stopVideo","_this3$props","opts","loadVideoById","cueVideoById","_this4","Player","container","addEventListener","handler","render","_this$props3","id","className","style","ref","process","env","NODE_ENV","propTypes","string","object","oneOfType","number","paused","bool","func","onError","onPlaybackRateChange","onPlaybackQualityChange","defaultProps"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAC5CD,EAAAA,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,CAACC,SAAzB,CAArB;AACAF,EAAAA,QAAQ,CAACE,SAAT,CAAmBG,WAAnB,GAAiCL,QAAjC;AACAA,EAAAA,QAAQ,CAACM,SAAT,GAAqBL,UAArB;AACD;;AAED,SAASM,sBAAT,CAAgCC,IAAhC,EAAsC;AACpC,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnB,UAAM,IAAIC,cAAJ,CAAmB,2DAAnB,CAAN;AACD;;AAED,SAAOD,IAAP;AACD;;AAED,IAAIE,UAAU,GAAG,CAAC,SAAD,EAAY,eAAZ,EAA6B,yBAA7B,EAAwD,sBAAxD,EAAgF,SAAhF,EAA2F,aAA3F,CAAjB;AAEA;;AAEA,SAASC,OAAT,GAAmB;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAI,OAAOC,MAAM,CAACC,EAAd,KAAqB,QAArB,IAAiC,OAAOD,MAAM,CAACC,EAAP,CAAUC,KAAjB,KAA2B,UAAhE,EAA4E;AAC1E;AACAF,MAAAA,MAAM,CAACC,EAAP,CAAUC,KAAV,CAAgB,YAAY;AAC1BJ,QAAAA,OAAO,CAACE,MAAM,CAACC,EAAR,CAAP;AACD,OAFD;AAGA;AACD;;AAEDlB,IAAAA,UAAU,CAAC,oCAAD,EAAuC,UAAUoB,GAAV,EAAe;AAC9D,UAAIA,GAAJ,EAAS;AACPJ,QAAAA,MAAM,CAACI,GAAD,CAAN;AACD,OAFD,MAEO;AACLH,QAAAA,MAAM,CAACC,EAAP,CAAUC,KAAV,CAAgB,YAAY;AAC1BJ,UAAAA,OAAO,CAACE,MAAM,CAACC,EAAR,CAAP;AACD,SAFD;AAGD;AACF,KARS,CAAV;AASD,GAlBM,CAAP;AAmBD;;AAED,IAAIG,GAAG,GAAG,IAAV;;AACA,SAASC,MAAT,GAAkB;AAChB,MAAI,CAACD,GAAL,EAAU;AACRA,IAAAA,GAAG,GAAGR,OAAO,EAAb;AACD;;AAED,SAAOQ,GAAP;AACD;;AAED,IAAIE,OAAO,GAAG,aAAa,UAAUC,gBAAV,EAA4B;AACrDvB,EAAAA,cAAc,CAACsB,OAAD,EAAUC,gBAAV,CAAd;;AAEA,WAASD,OAAT,CAAiBE,KAAjB,EAAwB;AACtB,QAAIC,KAAJ;;AAEAA,IAAAA,KAAK,GAAGF,gBAAgB,CAACG,IAAjB,CAAsB,IAAtB,EAA4BF,KAA5B,KAAsC,IAA9C;AACAC,IAAAA,KAAK,CAACE,aAAN,GAAsBF,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBpB,sBAAsB,CAACiB,KAAD,CAA/C,CAAtB;AACAA,IAAAA,KAAK,CAACI,mBAAN,GAA4BJ,KAAK,CAACI,mBAAN,CAA0BD,IAA1B,CAA+BpB,sBAAsB,CAACiB,KAAD,CAArD,CAA5B;AACAA,IAAAA,KAAK,CAACK,YAAN,GAAqBL,KAAK,CAACK,YAAN,CAAmBF,IAAnB,CAAwBpB,sBAAsB,CAACiB,KAAD,CAA9C,CAArB;AACA,WAAOA,KAAP;AACD;;AAED,MAAIM,MAAM,GAAGT,OAAO,CAACnB,SAArB;;AAEA4B,EAAAA,MAAM,CAACC,iBAAP,GAA2B,SAASA,iBAAT,GAA6B;AACtD,SAAKC,YAAL;AACD,GAFD;;AAIAF,EAAAA,MAAM,CAACG,kBAAP,GAA4B,SAASA,kBAAT,CAA4BC,SAA5B,EAAuC;AACjE,QAAIC,MAAM,GAAG,IAAb,CADiE,CAGjE;;;AACA,QAAIC,OAAO,GAAGjC,MAAM,CAACkC,IAAP,CAAY,KAAKd,KAAjB,EAAwBe,MAAxB,CAA+B,UAAUC,IAAV,EAAgB;AAC3D,aAAOJ,MAAM,CAACZ,KAAP,CAAagB,IAAb,MAAuBL,SAAS,CAACK,IAAD,CAAvC;AACD,KAFa,CAAd;AAGA,SAAKC,WAAL,CAAiBJ,OAAjB;AACD,GARD;;AAUAN,EAAAA,MAAM,CAACW,oBAAP,GAA8B,SAASA,oBAAT,GAAgC;AAC5D,QAAI,KAAKC,cAAT,EAAyB;AACvB,WAAKA,cAAL,CAAoBC,OAApB;AACD;AACF,GAJD;;AAMAb,EAAAA,MAAM,CAACJ,aAAP,GAAuB,SAASA,aAAT,CAAuBkB,KAAvB,EAA8B;AACnD,QAAIC,WAAW,GAAG,KAAKtB,KAAvB;AAAA,QACIuB,MAAM,GAAGD,WAAW,CAACC,MADzB;AAAA,QAEIC,KAAK,GAAGF,WAAW,CAACE,KAFxB;AAAA,QAGIC,gBAAgB,GAAGH,WAAW,CAACG,gBAHnC;AAAA,QAIIC,YAAY,GAAGJ,WAAW,CAACI,YAJ/B;;AAMA,QAAI,OAAOH,MAAP,KAAkB,WAAtB,EAAmC;AACjCF,MAAAA,KAAK,CAACM,MAAN,CAAaC,SAAb,CAAuBL,MAAM,GAAG,GAAhC;AACD;;AAED,QAAI,OAAOC,KAAP,KAAiB,WAArB,EAAkC;AAChC,UAAIA,KAAJ,EAAW;AACTH,QAAAA,KAAK,CAACM,MAAN,CAAaE,IAAb;AACD,OAFD,MAEO;AACLR,QAAAA,KAAK,CAACM,MAAN,CAAaG,MAAb;AACD;AACF;;AAED,QAAI,OAAOL,gBAAP,KAA4B,WAAhC,EAA6C;AAC3CJ,MAAAA,KAAK,CAACM,MAAN,CAAaI,kBAAb,CAAgCN,gBAAhC;AACD;;AAED,QAAI,OAAOC,YAAP,KAAwB,WAA5B,EAAyC;AACvCL,MAAAA,KAAK,CAACM,MAAN,CAAaK,eAAb,CAA6BN,YAA7B;AACD;;AAED,SAAKO,aAAL,CAAmBZ,KAAK,CAACM,MAAzB;AACD,GA5BD;;AA8BApB,EAAAA,MAAM,CAACF,mBAAP,GAA6B,SAASA,mBAAT,CAA6BgB,KAA7B,EAAoC;AAC/D,QAAIa,YAAY,GAAG,KAAKlC,KAAxB;AAAA,QACImC,MAAM,GAAGD,YAAY,CAACC,MAD1B;AAAA,QAEIC,WAAW,GAAGF,YAAY,CAACE,WAF/B;AAAA,QAGIC,OAAO,GAAGH,YAAY,CAACG,OAH3B;AAAA,QAIIC,SAAS,GAAGJ,YAAY,CAACI,SAJ7B;AAAA,QAKIC,KAAK,GAAGL,YAAY,CAACK,KALzB;AAMA,QAAIC,KAAK,GAAG/C,EAAE,CAACgD,WAAf,CAP+D,CAOnC;;AAE5B,YAAQpB,KAAK,CAACqB,IAAd;AACE,WAAKF,KAAK,CAACG,IAAX;AACER,QAAAA,MAAM,CAACd,KAAD,CAAN;AACA;;AAEF,WAAKmB,KAAK,CAACI,SAAX;AACER,QAAAA,WAAW,CAACf,KAAD,CAAX;AACA;;AAEF,WAAKmB,KAAK,CAACK,MAAX;AACER,QAAAA,OAAO,CAAChB,KAAD,CAAP;AACA;;AAEF,WAAKmB,KAAK,CAACM,OAAX;AACER,QAAAA,SAAS,CAACjB,KAAD,CAAT;AACA;;AAEF,WAAKmB,KAAK,CAACO,KAAX;AACER,QAAAA,KAAK,CAAClB,KAAD,CAAL;AACA;AAnBJ;AAsBD;AACD;AACF;AACA;AAlCE;;AAqCAd,EAAAA,MAAM,CAACyC,mBAAP,GAA6B,SAASA,mBAAT,GAA+B;AAC1D;AACA,WAAO;AACLC,MAAAA,QAAQ,EAAE,KAAKjD,KAAL,CAAWiD,QADhB;AAELC,MAAAA,cAAc,EAAE,KAAKlD,KAAL,CAAWmD,YAAX,GAA0B,CAA1B,GAA8B,CAFzC;AAGLC,MAAAA,QAAQ,EAAE,KAAKpD,KAAL,CAAWoD,QAAX,GAAsB,CAAtB,GAA0B,CAH/B;AAILC,MAAAA,SAAS,EAAE,KAAKrD,KAAL,CAAWsD,eAAX,GAA6B,CAA7B,GAAiC,CAJvC;AAKLC,MAAAA,EAAE,EAAE,KAAKvD,KAAL,CAAWwD,eAAX,GAA6B,CAA7B,GAAiC,CALhC;AAMLC,MAAAA,EAAE,EAAE,KAAKzD,KAAL,CAAW0D,IANV;AAOLC,MAAAA,cAAc,EAAE,KAAK3D,KAAL,CAAW4D,WAAX,GAAyB,CAAzB,GAA6B,CAPxC;AAQLC,MAAAA,KAAK,EAAE,KAAK7D,KAAL,CAAW8D,YARb;AASLC,MAAAA,GAAG,EAAE,KAAK/D,KAAL,CAAWgE,UATX;AAULC,MAAAA,cAAc,EAAE,KAAKjE,KAAL,CAAWkE,cAAX,GAA4B,CAA5B,GAAgC,CAV3C;AAWLC,MAAAA,WAAW,EAAE,KAAKnE,KAAL,CAAWoE,WAAX,GAAyB,CAAzB,GAA6B,CAXrC;AAYLC,MAAAA,GAAG,EAAE,KAAKrE,KAAL,CAAWsE,iBAAX,GAA+B,CAA/B,GAAmC,CAZnC;AAaLC,MAAAA,QAAQ,EAAE,KAAKvE,KAAL,CAAWwE,QAAX,GAAsB,CAAtB,GAA0B;AAb/B,KAAP;AAeA;AACD;AACD;AACF;AACA;AArBE;;AAwBAjE,EAAAA,MAAM,CAACkE,iBAAP,GAA2B,SAASA,iBAAT,GAA6B;AACtD;AACA,WAAO;AACLC,MAAAA,OAAO,EAAE,KAAK1E,KAAL,CAAW2E,KADf;AAELC,MAAAA,KAAK,EAAE,KAAK5E,KAAL,CAAW4E,KAFb;AAGLC,MAAAA,MAAM,EAAE,KAAK7E,KAAL,CAAW6E,MAHd;AAILC,MAAAA,UAAU,EAAE,KAAK9B,mBAAL,EAJP;AAKL+B,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE,KAAK7E,aADR;AAEN8E,QAAAA,aAAa,EAAE,KAAK5E;AAFd;AALH,KAAP;AAUA;AACD;AACD;AACF;AACA;AAhBE;;AAmBAE,EAAAA,MAAM,CAACU,WAAP,GAAqB,SAASA,WAAT,CAAqBiE,SAArB,EAAgC;AACnD,QAAIC,MAAM,GAAG,IAAb;;AAEA,SAAKC,MAAL,CAAYC,IAAZ,CAAiB,UAAUD,MAAV,EAAkB;AACjCF,MAAAA,SAAS,CAACI,OAAV,CAAkB,UAAUtE,IAAV,EAAgB;AAChC;AACA,YAAIuE,KAAK,GAAGJ,MAAM,CAACnF,KAAP,CAAagB,IAAb,CAAZ;;AAEA,gBAAQA,IAAR;AACE,eAAK,OAAL;AACE,gBAAIuE,KAAJ,EAAW;AACTH,cAAAA,MAAM,CAACvD,IAAP;AACD,aAFD,MAEO;AACLuD,cAAAA,MAAM,CAACtD,MAAP;AACD;;AAED;;AAEF,eAAK,kBAAL;AACEsD,YAAAA,MAAM,CAACrD,kBAAP,CAA0BwD,KAA1B;AACA;;AAEF,eAAK,QAAL;AACEH,YAAAA,MAAM,CAACxD,SAAP,CAAiB2D,KAAK,GAAG,GAAzB;AACA;;AAEF,eAAK,QAAL;AACE,gBAAIA,KAAK,IAAIH,MAAM,CAACI,cAAP,OAA4B,CAAzC,EAA4C;AAC1CJ,cAAAA,MAAM,CAACK,UAAP;AACD,aAFD,MAEO,IAAI,CAACF,KAAD,IAAUH,MAAM,CAACI,cAAP,OAA4B,CAA1C,EAA6C;AAClDJ,cAAAA,MAAM,CAACM,SAAP;AACD;;AAED;;AAEF,eAAK,IAAL;AACA,eAAK,WAAL;AACA,eAAK,OAAL;AACA,eAAK,QAAL;AACEN,YAAAA,MAAM,CAACO,SAAP,GAAmB3E,IAAnB,IAA2BuE,KAA3B,CADF,CACoC;;AAElC;;AAEF,eAAK,OAAL;AACE,gBAAI,CAACA,KAAL,EAAY;AACVH,cAAAA,MAAM,CAACQ,SAAP;AACD,aAFD,MAEO;AACL,kBAAIC,YAAY,GAAGV,MAAM,CAACnF,KAA1B;AAAA,kBACI8D,YAAY,GAAG+B,YAAY,CAAC/B,YADhC;AAAA,kBAEIE,UAAU,GAAG6B,YAAY,CAAC7B,UAF9B;AAAA,kBAGIf,QAAQ,GAAG4C,YAAY,CAAC5C,QAH5B;AAIA,kBAAI6C,IAAI,GAAG;AACTpB,gBAAAA,OAAO,EAAEa,KADA;AAETzB,gBAAAA,YAAY,EAAEA,YAAY,IAAI,CAFrB;AAGTE,gBAAAA,UAAU,EAAEA;AAHH,eAAX;;AAMA,kBAAIf,QAAJ,EAAc;AACZmC,gBAAAA,MAAM,CAACW,aAAP,CAAqBD,IAArB;AACD,eAFD,MAEO;AACLV,gBAAAA,MAAM,CAACY,YAAP,CAAoBF,IAApB;AACD;AACF;;AAED;AAxDJ;AA2DD,OA/DD;AAgED,KAjED;AAkED;AACD;AACF;AACA;AAxEE;;AA2EAvF,EAAAA,MAAM,CAACE,YAAP,GAAsB,SAASA,YAAT,GAAwB;AAC5C,QAAIwF,MAAM,GAAG,IAAb;;AAEA,QAAI1E,MAAM,GAAG,KAAKvB,KAAL,CAAWuB,MAAxB;AACA,SAAK6D,MAAL,GAAcvF,MAAM,GAAGwF,IAAT,CAAc,UAAU5F,EAAV,EAAc;AACxC,aAAO,IAAIJ,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpC2G,QAAAA,MAAM,CAAChE,aAAP,GAAuB3C,OAAvB;AACA,YAAI8F,MAAM,GAAG,IAAI3F,EAAE,CAACyG,MAAP,CAAcD,MAAM,CAACE,SAArB,EAAgCF,MAAM,CAACxB,iBAAP,EAAhC,CAAb,CAFoC,CAEsC;AAC1E;;AAEAwB,QAAAA,MAAM,CAAC9E,cAAP,GAAwBiE,MAAxB;AACAjG,QAAAA,UAAU,CAACmG,OAAX,CAAmB,UAAUtE,IAAV,EAAgB;AACjCoE,UAAAA,MAAM,CAACgB,gBAAP,CAAwBpF,IAAxB,EAA8B,UAAUK,KAAV,EAAiB;AAC7C;AACA,gBAAIgF,OAAO,GAAGJ,MAAM,CAACjG,KAAP,CAAagB,IAAb,CAAd;;AAEA,gBAAIqF,OAAJ,EAAa;AACXA,cAAAA,OAAO,CAAChF,KAAD,CAAP;AACD;AACF,WAPD;AAQD,SATD;AAUD,OAhBM,CAAP;AAiBD,KAlBa,CAAd;;AAoBA,QAAI,OAAOE,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAKN,WAAL,CAAiB,CAAC,QAAD,CAAjB;AACD;AACF;AACD;AACF;AACA;AA9BE;;AAiCAV,EAAAA,MAAM,CAACD,YAAP,GAAsB,SAASA,YAAT,CAAsB6F,SAAtB,EAAiC;AACrD,SAAKA,SAAL,GAAiBA,SAAjB;AACD,GAFD;;AAIA5F,EAAAA,MAAM,CAAC+F,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAIC,YAAY,GAAG,KAAKvG,KAAxB;AAAA,QACIwG,EAAE,GAAGD,YAAY,CAACC,EADtB;AAAA,QAEIC,SAAS,GAAGF,YAAY,CAACE,SAF7B;AAAA,QAGIC,KAAK,GAAGH,YAAY,CAACG,KAHzB;AAIA,WAAO,aAAatI,aAAa,CAAC,KAAD,EAAQ;AACvCoI,MAAAA,EAAE,EAAEA,EADmC;AAEvCC,MAAAA,SAAS,EAAEA,SAF4B;AAGvCC,MAAAA,KAAK,EAAEA,KAHgC;AAIvCC,MAAAA,GAAG,EAAE,KAAKrG;AAJ6B,KAAR,CAAjC;AAMD,GAXD;;AAaA,SAAOR,OAAP;AACD,CA/Q0B,CA+QzBzB,SA/QyB,CAA3B;;AAiRA,IAAIuI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzChH,EAAAA,OAAO,CAACiH,SAAR,GAAoB;AAClB;AACJ;AACA;AACIpC,IAAAA,KAAK,EAAErG,SAAS,CAAC0I,MAJC;;AAMlB;AACJ;AACA;AACIR,IAAAA,EAAE,EAAElI,SAAS,CAAC0I,MATI;;AAWlB;AACJ;AACA;AACIP,IAAAA,SAAS,EAAEnI,SAAS,CAAC0I,MAdH;;AAgBlB;AACJ;AACA;AACIN,IAAAA,KAAK,EAAEpI,SAAS,CAAC2I,MAnBC;AAoBlB;;AAEA;AACJ;AACA;AACIrC,IAAAA,KAAK,EAAEtG,SAAS,CAAC4I,SAAV,CAAoB,CAAC5I,SAAS,CAAC6I,MAAX,EAAmB7I,SAAS,CAAC0I,MAA7B,CAApB,CAzBW;;AA2BlB;AACJ;AACA;AACInC,IAAAA,MAAM,EAAEvG,SAAS,CAAC4I,SAAV,CAAoB,CAAC5I,SAAS,CAAC6I,MAAX,EAAmB7I,SAAS,CAAC0I,MAA7B,CAApB,CA9BU;;AAgClB;AACJ;AACA;AACII,IAAAA,MAAM,EAAE9I,SAAS,CAAC+I,IAnCA;AAoClB;AACA;;AAEA;AACJ;AACA;AACA;AACA;AACIpE,IAAAA,QAAQ,EAAE3E,SAAS,CAAC+I,IA5CF;;AA8ClB;AACJ;AACA;AACA;AACA;AACIlE,IAAAA,YAAY,EAAE7E,SAAS,CAAC+I,IAnDN;;AAqDlB;AACJ;AACA;AACA;AACA;AACIjE,IAAAA,QAAQ,EAAE9E,SAAS,CAAC+I,IA1DF;;AA4DlB;AACJ;AACA;AACA;AACA;AACI/D,IAAAA,eAAe,EAAEhF,SAAS,CAAC+I,IAjET;;AAmElB;AACJ;AACA;AACA;AACA;AACI7D,IAAAA,eAAe,EAAElF,SAAS,CAAC+I,IAxET;;AA0ElB;AACJ;AACA;AACA;AACA;AACA;AACI3D,IAAAA,IAAI,EAAEpF,SAAS,CAAC0I,MAhFE;;AAkFlB;AACJ;AACA;AACA;AACA;AACIpD,IAAAA,WAAW,EAAEtF,SAAS,CAAC+I,IAvFL;;AAyFlB;AACJ;AACA;AACA;AACA;AACIvD,IAAAA,YAAY,EAAExF,SAAS,CAAC6I,MA9FN;;AAgGlB;AACJ;AACA;AACA;AACA;AACInD,IAAAA,UAAU,EAAE1F,SAAS,CAAC6I,MArGJ;;AAuGlB;AACJ;AACA;AACA;AACA;AACIjD,IAAAA,cAAc,EAAE5F,SAAS,CAAC+I,IA5GR;;AA8GlB;AACJ;AACA;AACA;AACA;AACIjD,IAAAA,WAAW,EAAE9F,SAAS,CAAC+I,IAnHL;;AAqHlB;AACJ;AACA;AACA;AACA;AACI/C,IAAAA,iBAAiB,EAAEhG,SAAS,CAAC+I,IA1HX;;AA4HlB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI7C,IAAAA,QAAQ,EAAElG,SAAS,CAAC+I,IApIF;;AAsIlB;AACJ;AACA;AACI9F,IAAAA,MAAM,EAAEjD,SAAS,CAAC6I,MAzIA;;AA2IlB;AACJ;AACA;AACI3F,IAAAA,KAAK,EAAElD,SAAS,CAAC+I,IA9IC;;AAgJlB;AACJ;AACA;AACA;AACA;AACI5F,IAAAA,gBAAgB,EAAEnD,SAAS,CAAC0I,MArJV;;AAuJlB;AACJ;AACA;AACA;AACA;AACItF,IAAAA,YAAY,EAAEpD,SAAS,CAAC6I,MA5JN;AA6JlB;;AAEA;;AAEA;AACJ;AACA;AACInC,IAAAA,OAAO,EAAE1G,SAAS,CAACgJ,IApKD;;AAsKlB;AACJ;AACA;AACIC,IAAAA,OAAO,EAAEjJ,SAAS,CAACgJ,IAzKD;;AA2KlB;AACJ;AACA;AACInF,IAAAA,MAAM,EAAE7D,SAAS,CAACgJ,IA9KA;;AAgLlB;AACJ;AACA;AACIlF,IAAAA,WAAW,EAAE9D,SAAS,CAACgJ,IAnLL;;AAqLlB;AACJ;AACA;AACIhF,IAAAA,SAAS,EAAEhE,SAAS,CAACgJ,IAxLH;;AA0LlB;AACJ;AACA;AACIjF,IAAAA,OAAO,EAAE/D,SAAS,CAACgJ,IA7LD;;AA+LlB;AACJ;AACA;AACI/E,IAAAA,KAAK,EAAEjE,SAAS,CAACgJ,IAlMC;AAmMlBrC,IAAAA,aAAa,EAAE3G,SAAS,CAACgJ,IAnMP;AAoMlBE,IAAAA,oBAAoB,EAAElJ,SAAS,CAACgJ,IApMd;AAqMlBG,IAAAA,uBAAuB,EAAEnJ,SAAS,CAACgJ;AACnC;;AAtMkB,GAApB;AAyMD;;AAEDxH,OAAO,CAAC4H,YAAR,GAAuB;AACrBzE,EAAAA,QAAQ,EAAE,KADW;AAErBE,EAAAA,YAAY,EAAE,KAFO;AAGrBC,EAAAA,QAAQ,EAAE,IAHW;AAIrBE,EAAAA,eAAe,EAAE,KAJI;AAKrBE,EAAAA,eAAe,EAAE,IALI;AAMrBI,EAAAA,WAAW,EAAE,IANQ;AAOrBM,EAAAA,cAAc,EAAE,KAPK;AAQrBE,EAAAA,WAAW,EAAE,KARQ;AASrBE,EAAAA,iBAAiB,EAAE,IATE;AAUrBE,EAAAA,QAAQ,EAAE,IAVW;AAWrBrC,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB,CAAE,CAXP;AAYrBC,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB,CAAE,CAZjB;AAarBE,EAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB,CAAE,CAbb;AAcrBD,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB,CAAE,CAdT;AAerBE,EAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB,CAAE;AAfL,CAAvB;AAkBA,eAAezC,OAAf","sourcesContent":["import { createElement, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport loadScript from 'load-script2';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar eventNames = ['onReady', 'onStateChange', 'onPlaybackQualityChange', 'onPlaybackRateChange', 'onError', 'onApiChange'];\n\n/* global window */\n\nfunction loadSdk() {\n  return new Promise(function (resolve, reject) {\n    if (typeof window.YT === 'object' && typeof window.YT.ready === 'function') {\n      // A YouTube SDK is already loaded, so reuse that\n      window.YT.ready(function () {\n        resolve(window.YT);\n      });\n      return;\n    }\n\n    loadScript('https://www.youtube.com/iframe_api', function (err) {\n      if (err) {\n        reject(err);\n      } else {\n        window.YT.ready(function () {\n          resolve(window.YT);\n        });\n      }\n    });\n  });\n}\n\nvar sdk = null;\nfunction getSdk() {\n  if (!sdk) {\n    sdk = loadSdk();\n  }\n\n  return sdk;\n}\n\nvar YouTube = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(YouTube, _React$Component);\n\n  function YouTube(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onPlayerReady = _this.onPlayerReady.bind(_assertThisInitialized(_this));\n    _this.onPlayerStateChange = _this.onPlayerStateChange.bind(_assertThisInitialized(_this));\n    _this.refContainer = _this.refContainer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = YouTube.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPlayer();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    var changes = Object.keys(this.props).filter(function (name) {\n      return _this2.props[name] !== prevProps[name];\n    });\n    this.updateProps(changes);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.playerInstance) {\n      this.playerInstance.destroy();\n    }\n  };\n\n  _proto.onPlayerReady = function onPlayerReady(event) {\n    var _this$props = this.props,\n        volume = _this$props.volume,\n        muted = _this$props.muted,\n        suggestedQuality = _this$props.suggestedQuality,\n        playbackRate = _this$props.playbackRate;\n\n    if (typeof volume !== 'undefined') {\n      event.target.setVolume(volume * 100);\n    }\n\n    if (typeof muted !== 'undefined') {\n      if (muted) {\n        event.target.mute();\n      } else {\n        event.target.unMute();\n      }\n    }\n\n    if (typeof suggestedQuality !== 'undefined') {\n      event.target.setPlaybackQuality(suggestedQuality);\n    }\n\n    if (typeof playbackRate !== 'undefined') {\n      event.target.setPlaybackRate(playbackRate);\n    }\n\n    this.resolvePlayer(event.target);\n  };\n\n  _proto.onPlayerStateChange = function onPlayerStateChange(event) {\n    var _this$props2 = this.props,\n        onCued = _this$props2.onCued,\n        onBuffering = _this$props2.onBuffering,\n        onPause = _this$props2.onPause,\n        onPlaying = _this$props2.onPlaying,\n        onEnd = _this$props2.onEnd;\n    var State = YT.PlayerState; // eslint-disable-line no-undef\n\n    switch (event.data) {\n      case State.CUED:\n        onCued(event);\n        break;\n\n      case State.BUFFERING:\n        onBuffering(event);\n        break;\n\n      case State.PAUSED:\n        onPause(event);\n        break;\n\n      case State.PLAYING:\n        onPlaying(event);\n        break;\n\n      case State.ENDED:\n        onEnd(event);\n        break;\n\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getPlayerParameters = function getPlayerParameters() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      autoplay: this.props.autoplay,\n      cc_load_policy: this.props.showCaptions ? 1 : 0,\n      controls: this.props.controls ? 1 : 0,\n      disablekb: this.props.disableKeyboard ? 1 : 0,\n      fs: this.props.allowFullscreen ? 1 : 0,\n      hl: this.props.lang,\n      iv_load_policy: this.props.annotations ? 1 : 3,\n      start: this.props.startSeconds,\n      end: this.props.endSeconds,\n      modestbranding: this.props.modestBranding ? 1 : 0,\n      playsinline: this.props.playsInline ? 1 : 0,\n      rel: this.props.showRelatedVideos ? 1 : 0,\n      showinfo: this.props.showInfo ? 1 : 0\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getInitialOptions = function getInitialOptions() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      videoId: this.props.video,\n      width: this.props.width,\n      height: this.props.height,\n      playerVars: this.getPlayerParameters(),\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange\n      }\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.updateProps = function updateProps(propNames) {\n    var _this3 = this;\n\n    this.player.then(function (player) {\n      propNames.forEach(function (name) {\n        // eslint-disable-next-line react/destructuring-assignment\n        var value = _this3.props[name];\n\n        switch (name) {\n          case 'muted':\n            if (value) {\n              player.mute();\n            } else {\n              player.unMute();\n            }\n\n            break;\n\n          case 'suggestedQuality':\n            player.setPlaybackQuality(value);\n            break;\n\n          case 'volume':\n            player.setVolume(value * 100);\n            break;\n\n          case 'paused':\n            if (value && player.getPlayerState() !== 2) {\n              player.pauseVideo();\n            } else if (!value && player.getPlayerState() === 2) {\n              player.playVideo();\n            }\n\n            break;\n\n          case 'id':\n          case 'className':\n          case 'width':\n          case 'height':\n            player.getIframe()[name] = value; // eslint-disable-line no-param-reassign\n\n            break;\n\n          case 'video':\n            if (!value) {\n              player.stopVideo();\n            } else {\n              var _this3$props = _this3.props,\n                  startSeconds = _this3$props.startSeconds,\n                  endSeconds = _this3$props.endSeconds,\n                  autoplay = _this3$props.autoplay;\n              var opts = {\n                videoId: value,\n                startSeconds: startSeconds || 0,\n                endSeconds: endSeconds\n              };\n\n              if (autoplay) {\n                player.loadVideoById(opts);\n              } else {\n                player.cueVideoById(opts);\n              }\n            }\n\n            break;\n\n        }\n      });\n    });\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.createPlayer = function createPlayer() {\n    var _this4 = this;\n\n    var volume = this.props.volume;\n    this.player = getSdk().then(function (YT) {\n      return new Promise(function (resolve) {\n        _this4.resolvePlayer = resolve;\n        var player = new YT.Player(_this4.container, _this4.getInitialOptions()); // Store the instance directly so we can destroy it sync in\n        // `componentWillUnmount`.\n\n        _this4.playerInstance = player;\n        eventNames.forEach(function (name) {\n          player.addEventListener(name, function (event) {\n            // eslint-disable-next-line react/destructuring-assignment\n            var handler = _this4.props[name];\n\n            if (handler) {\n              handler(event);\n            }\n          });\n        });\n      });\n    });\n\n    if (typeof volume === 'number') {\n      this.updateProps(['volume']);\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.refContainer = function refContainer(container) {\n    this.container = container;\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        id = _this$props3.id,\n        className = _this$props3.className,\n        style = _this$props3.style;\n    return /*#__PURE__*/createElement(\"div\", {\n      id: id,\n      className: className,\n      style: style,\n      ref: this.refContainer\n    });\n  };\n\n  return YouTube;\n}(Component);\n\nif (process.env.NODE_ENV !== 'production') {\n  YouTube.propTypes = {\n    /**\n     * An 11-character string representing a YouTube video ID..\n     */\n    video: PropTypes.string,\n\n    /**\n     * DOM ID for the player element.\n     */\n    id: PropTypes.string,\n\n    /**\n     * CSS className for the player element.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Inline style for container element.\n     */\n    style: PropTypes.object,\n    // eslint-disable-line react/forbid-prop-types\n\n    /**\n     * Width of the player element.\n     */\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Height of the player element.\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Pause the video.\n     */\n    paused: PropTypes.bool,\n    // eslint-disable-line react/no-unused-prop-types\n    // Player parameters\n\n    /**\n     * Whether the video should start playing automatically.\n     *\n     * https://developers.google.com/youtube/player_parameters#autoplay\n     */\n    autoplay: PropTypes.bool,\n\n    /**\n     * Whether to show captions below the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#cc_load_policy\n     */\n    showCaptions: PropTypes.bool,\n\n    /**\n     * Whether to show video controls.\n     *\n     * https://developers.google.com/youtube/player_parameters#controls\n     */\n    controls: PropTypes.bool,\n\n    /**\n     * Ignore keyboard controls.\n     *\n     * https://developers.google.com/youtube/player_parameters#disablekb\n     */\n    disableKeyboard: PropTypes.bool,\n\n    /**\n     * Whether to display the fullscreen button.\n     *\n     * https://developers.google.com/youtube/player_parameters#fs\n     */\n    allowFullscreen: PropTypes.bool,\n\n    /**\n     * The player's interface language. The parameter value is an ISO 639-1\n     * two-letter language code or a fully specified locale.\n     *\n     * https://developers.google.com/youtube/player_parameters#hl\n     */\n    lang: PropTypes.string,\n\n    /**\n     * Whether to show annotations on top of the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#iv_load_policy\n     */\n    annotations: PropTypes.bool,\n\n    /**\n     * Time in seconds at which to start playing the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#start\n     */\n    startSeconds: PropTypes.number,\n\n    /**\n     * Time in seconds at which to stop playing the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#end\n     */\n    endSeconds: PropTypes.number,\n\n    /**\n     * Remove most YouTube logos from the player.\n     *\n     * https://developers.google.com/youtube/player_parameters#modestbranding\n     */\n    modestBranding: PropTypes.bool,\n\n    /**\n     * Whether to play the video inline on iOS, instead of fullscreen.\n     *\n     * https://developers.google.com/youtube/player_parameters#playsinline\n     */\n    playsInline: PropTypes.bool,\n\n    /**\n     * Whether to show related videos after the video is over.\n     *\n     * https://developers.google.com/youtube/player_parameters#rel\n     */\n    showRelatedVideos: PropTypes.bool,\n\n    /**\n     * Whether to show video information (uploader, title, etc) before the video\n     * starts.\n     *\n     * **This parameter has been deprecated and has no effect.**\n     *\n     * https://developers.google.com/youtube/player_parameters#showinfo\n     */\n    showInfo: PropTypes.bool,\n\n    /**\n     * The playback volume, **as a number between 0 and 1**.\n     */\n    volume: PropTypes.number,\n\n    /**\n     * Whether the video's sound should be muted.\n     */\n    muted: PropTypes.bool,\n\n    /**\n     * The suggested playback quality.\n     *\n     * https://developers.google.com/youtube/iframe_api_reference#Playback_quality\n     */\n    suggestedQuality: PropTypes.string,\n\n    /**\n     * Playback speed.\n     *\n     * https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n     */\n    playbackRate: PropTypes.number,\n    // Events\n\n    /* eslint-disable react/no-unused-prop-types */\n\n    /**\n     * Sent when the YouTube player API has loaded.\n     */\n    onReady: PropTypes.func,\n\n    /**\n     * Sent when the player triggers an error.\n     */\n    onError: PropTypes.func,\n\n    /**\n     * Sent when the video is cued and ready to play.\n     */\n    onCued: PropTypes.func,\n\n    /**\n     * Sent when the video is buffering.\n     */\n    onBuffering: PropTypes.func,\n\n    /**\n     * Sent when playback has been started or resumed.\n     */\n    onPlaying: PropTypes.func,\n\n    /**\n     * Sent when playback has been paused.\n     */\n    onPause: PropTypes.func,\n\n    /**\n     * Sent when playback has stopped.\n     */\n    onEnd: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onPlaybackRateChange: PropTypes.func,\n    onPlaybackQualityChange: PropTypes.func\n    /* eslint-enable react/no-unused-prop-types */\n\n  };\n}\n\nYouTube.defaultProps = {\n  autoplay: false,\n  showCaptions: false,\n  controls: true,\n  disableKeyboard: false,\n  allowFullscreen: true,\n  annotations: true,\n  modestBranding: false,\n  playsInline: false,\n  showRelatedVideos: true,\n  showInfo: true,\n  onCued: function onCued() {},\n  onBuffering: function onBuffering() {},\n  onPlaying: function onPlaying() {},\n  onPause: function onPause() {},\n  onEnd: function onEnd() {}\n};\n\nexport default YouTube;\n"]},"metadata":{},"sourceType":"module"}